---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mockoon
  namespace: wso2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mockoon
  template:
    metadata:
      labels:
        app: mockoon
    spec:
      containers:
        - name: mockoon
          image: mockoon/cli:latest
          args: ["-d", "/data/data.json"]
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: data
              mountPath: "/data"
      volumes:
        - name: data
          configMap:
            name: mockoon-data
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mockoon
  name: mockoon
  namespace: wso2
spec:
  type: ClusterIP
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app: mockoon
  ports:
    # ports that this service should serve on
    - name: http
      port: 80
      targetPort: 3000
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mockoon-2
  namespace: wso2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mockoon-2
  template:
    metadata:
      labels:
        app: mockoon-2
    spec:
      containers:
        - name: mockoon-2
          image: mockoon/cli:latest
          args: ["-d", "/data/data.json"]
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: data
              mountPath: "/data"
      volumes:
        - name: data
          configMap:
            name: mockoon-data
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mockoon-2
  name: mockoon-2
  namespace: wso2
spec:
  type: ClusterIP
  # label keys and values that must match in order to receive traffic for this service
  selector:
    app: mockoon-2
  ports:
    # ports that this service should serve on
    - name: http
      port: 80
      targetPort: 3000
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-mockoon
  namespace: wso2
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: go-mockoon.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mockoon
                port:
                  number: 80
                  
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mockoon-data
  namespace: wso2
data:
  data.json: |
    {"openapi":"3.0.0","info":{"title":"Test","version":"1.0.0"},"servers":[{"url":"http://localhost:3000/"}],"paths":{"/test":{"post":{"description":"","responses":{"200":{"description":"","content":{"application/json":{"example":"{\"statusCode\":\"000\",\"status\":\"Success\",\"message\":\"Request Completed Successfully\",\"dataResponse\":\"<ugdefs:OutputNewApplicationXML pending=\\\"true\\\" xmlns:ugdefs=\\\"http://defs.webservices.experian.com\\\"><TicketNumber xmlns=\\\"\\\">20569222</TicketNumber><DateTimeRequestReceived xmlns=\\\"\\\">18-01-2024 13:01:09.301</DateTimeRequestReceived></ugdefs:OutputNewApplicationXML>\"}"}},"headers":{"set-cookie":{"schema":{"type":"string"},"example":"saplb_*=(J2EE5996120)5996152; Version=1; Path=/; Secure; HttpOnly"}}}}}},"/username":{"get":{"description":"","responses":{"200":{"description":"","content":{"application/json":{"example":"{\"message\":\"ok\"}"}},"headers":{}}}}}}}
